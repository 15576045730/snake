#include "Zimo.hpp"
#include <iostream>

Zimo::Zimo():_color(255,255,255)
{
}

Zimo::~Zimo()
{
	
}

void Zimo::draw()
{
	this->draw();
}

void Zimo::zimoDisplay(int num, int w, int h, int beginx, int beginy, unsigned char *bitmap, Color color)
{
    int i = 0; // 按字节循环数据
    int x, y;
    // 宽的字节数
    int kuandu = w % 8 ? w / 8 + 1 : w / 8;

    for (i = 0; i < kuandu * h; i++)
    {
        // 计算当前字节对应的 y 坐标
        y = i / kuandu; // 每行有多少个字节

        // 将这个字节分解为 bit，顺向，高 bit 在前
        for (int j = 7; j >= 0; j--)
        {
            // 计算当前 bit 对应的 x 坐标
            x = (i % kuandu) * 8 + (7 - j);

            // 如果该 bit 为 1，则绘制前景色；否则绘制背景色
            if (bitmap[i] & (1 << j))
            {
                Screen::getInstance().draw_point(Point(x + beginx, y + beginy), color);
            }
            else
            {
                // 假设您有一个背景色，默认使用灰色或其他指定颜色
                Screen::getInstance().draw_point(Point(x + beginx, y + beginy), Color(168, 167, 167)); // 灰底
            }
        }
    }
}

// 数字
unsigned char shuzi[10][8 * 2] = {
	// 0
	{
		0x00,0x00,0x00,0x18,0x24,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0x24,0x18,0x00,0x00
	},
	// 1
	{
		0x00,0x00,0x00,0x08,0x38,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x08,0x3E,0x00,0x00
	},
	// 2
	{
		0x00,0x00,0x00,0x3C,0x42,0x42,0x42,0x02,0x04,0x08,0x10,0x20,0x42,0x7E,0x00,0x00
	},
	// 3
	{
		0x00,0x00,0x00,0x3C,0x42,0x42,0x02,0x04,0x18,0x04,0x02,0x42,0x42,0x3C,0x00,0x00
	},
	// 4
	{
		0x00,0x00,0x00,0x04,0x0C,0x0C,0x14,0x24,0x24,0x44,0x7F,0x04,0x04,0x1F,0x00,0x00
	},
	// 5
	{
		0x00,0x00,0x00,0x7E,0x40,0x40,0x40,0x78,0x44,0x02,0x02,0x42,0x44,0x38,0x00,0x00
	},
	// 6
	{
		0x00,0x00,0x00,0x18,0x24,0x40,0x40,0x5C,0x62,0x42,0x42,0x42,0x22,0x1C,0x00,0x00
	},
	// 7
	{
		0x00,0x00,0x00,0x7E,0x42,0x04,0x04,0x08,0x08,0x10,0x10,0x10,0x10,0x10,0x00,0x00
	},
	// 8
	{
		0x00,0x00,0x00,0x3C,0x42,0x42,0x42,0x24,0x18,0x24,0x42,0x42,0x42,0x3C,0x00,0x00
	},
	// 9
	{
		0x00,0x00,0x00,0x38,0x44,0x42,0x42,0x42,0x46,0x3A,0x02,0x02,0x24,0x18,0x00,0x00
	}
};
